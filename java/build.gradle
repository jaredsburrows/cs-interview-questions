import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java-library'
    id 'groovy'
    alias(libs.plugins.license)
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.addAll(['-Xlint:all', '-Xlint:-options'])
    options.encoding = 'UTF-8'
    options.fork = true
}

tasks.withType(GroovyCompile).configureEach {
    options.compilerArgs.addAll(['-Xlint:all', '-Xlint:-options'])
    options.encoding = 'UTF-8'
    options.fork = true
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        events = [TestLogEvent.FAILED, TestLogEvent.SKIPPED]
        showCauses = true
        showExceptions = true
        showStackTraces = true
    }

    def maxWorkerCount = gradle.startParameter.maxWorkerCount
    maxParallelForks = (maxWorkerCount < 2) ? 1 : maxWorkerCount / 2
}

dependencies {
    compileOnly libs.findbugs

    testImplementation platform(libs.junit.bom)
    testRuntimeOnly(libs.junit.platform.launcher)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(libs.junit.vintage.engine)

    testImplementation localGroovy()
    testImplementation libs.spockcore, { exclude module: 'groovy-all' } // Use localGroovy()
    testImplementation libs.equalsverifier
}
